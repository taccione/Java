import java.util.Scanner;
import java.util.Random;
public class LottoVenezia {
    public static void main(String[] args) {

        Scanner tastiera = new Scanner(System.in);
        Random random = new Random();

        //Dichiarazione delle variabili
        boolean fine = true;
        int[] numeriCasuali = new int[5]; 

        // Ruota Venezia: Estrarre 5 numeri casuali nel range 1-90
        // Visualizza: Visualizzare i valori estratti
        // Impostare le opzioni del men√π in relazione alle opzioni

        String[] opzioni = {"Estrazioni lotto", "[1] Ruota Venezia", "[2] Visualizza", "[3] Exit"};

        do{
            switch(menu(opzioni, tastiera)){
                case 1:
                    System.out.println("opzione 1");
                    for (int i = 0; i < 5; i++) {
                        numeriCasuali[i] = random.nextInt(101); 
                    }
                    break;
                case 2:
                    System.out.println("opzione 2");
                    visualizza(numeriCasuali);
                    break;
                case 3:
                    System.out.println("exit");
                    fine = false;
                    break;
            }Wait(2000);
        }while(fine);


    }

    private static int menu(String[] opzioni, Scanner kyb){
        //Dichiarazione delle variabili
        int scelta;
        do {
            ClrScr();
            System.out.println("----" + opzioni[0] + "----");
            for (int i = 0; i < opzioni.length; i++) {
                System.out.println(opzioni[i]);

            }
            System.out.println("-------------");
            scelta = kyb.nextInt();

            if(!(scelta >=1 && scelta < opzioni.length)){
                System.out.println("Scelta errata!");
                Wait(2000);
            }

        }while(!(scelta >=1 && scelta < opzioni.length));
        return scelta;
    }





    private static void ClrScr() {
        try {
            new ProcessBuilder("cmd", "/c", "cls").inheritIO().start().waitFor();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }




    private static void Wait(int tempo) {
        try {
            Thread.sleep(tempo);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    
    
    private static void visualizza(void[] v) {
        for (int i = 0; i < v.length; i++) {
            System.out.println(i + "=" + v[i]);
        }
    }
    
    
}
